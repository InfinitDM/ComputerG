import pygame as pg
import sys
pg.init()
pg.mixer.music.load('Red Miata.mp3')
pg.mixer.music.play(-1)

FPS = 60
WIN_WIDTH = 1332
WIN_HEIGHT = 850
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GRAY = (125, 125, 125)
LIGHT_BLUE = (0,173,181)
GREEN = (0, 200, 64)
YELLOW = (225, 225, 0)
# SUN
ORANGE = (255,144,31)
PINKS = (255,41,117)
LILOWIY = (235,0,0)
clock = pg.time.Clock()
sc = pg.display.set_mode(
    (WIN_WIDTH, WIN_HEIGHT))

r = 200
x = WIN_WIDTH + r
# выравнивание по центру по вертикали
y = 205
BLACK = (0, 0, 0)
while 1:
    for i in pg.event.get():
        if i.type == pg.QUIT:
            sys.exit()

    # заливаем фон
    sc.fill(BLACK)
    # рисуем круг

    pg.draw.circle(sc, PINKS,
                   (x, y), r)
    pg.draw.rect(sc, (34, 39, 69),
                 (0, 491, 1332, 491))
    pg.draw.line(sc, BLACK, [0,350], [1332,350],40)
    pg.draw.line(sc, BLACK, [0, 150], [1332, 150], 10)
    pg.draw.line(sc, BLACK, [0, 200], [1332, 200], 19)
    pg.draw.line(sc, BLACK, [0, 250], [1332, 250], 25)
    pg.draw.line(sc, BLACK, [0, 300], [1332, 300], 35)
    pg.draw.polygon(sc, BLACK,
                  [[0,491],[0, 449], [21, 449], [21, 463], [25, 466], [25, 473], [35, 473], [35, 452], [42, 452], [42, 415],
                   [78, 415], [78, 438], [99, 438], [99, 428], [105, 428], [105, 424],
                   [118, 424], [118, 432], [124, 432], [124, 426], [133, 426], [133, 367], [146, 367], [146, 346],
                   [170, 346],[170,331],[197,331],[197,337],[222,337],[222,367],[232,367],[232,394],[242,398],[242,426],[248,426],[248,418],[262,418],[262,321],
                   [271,321],[271,281],[300,293],[300,322],[312,322],[312,444],[349,444],[349,361],[363,361],[363,339],[400,339],[400,363],[412,363],[412,399],
                   [429,399],[429,431],[449,431],[449,389],[462,389],[462,341],[471,341],[471,299],[541,299],[541,415],
                   [560,415],[560,427],[570,427],[570,333],[583,333],[583,326],[627,326],[627,334],[637,334],[637,401],
                   [643,401],[643,422],[647,421],[647,416],[660,407],[665,407],[665,382],[671,382],
                   [671,373],[675,373],[675,359],[678,359],[678,343],[683,343],[683,359],[688,359],[688,373],
                   [694,373],[694,382],[701,382],[701,418],[707,418],[707,395],[720,395],[720,353],[738,346],
                   [803,346],[820,353],[821,400],[840,400],[840,429],[854,429],[854,302],[912,302],[912,449],
                   [915,449],[915,444],[919,444],[919,418],[932,418],[932,361],[964,390],[964,365],[972,357],
                   [996,357],[996,365],[1008,365],[1008,378],[1012,378],[1012,394],[1017,394],[1017,409],
                   [1022,409],[1022,422],[1030,422],[1030,429],[1035,429],[1035,414],[1059,389],[1059,325],
                   [1117,325],[1117,334],[1128,334],[1128,413],[1143,413],[1143,419],[1160,419],[1160,313],[1202,368],[1247,323],
                   [1247,441],[1271,441],[1271,463],[1332,463],[1332,491]])
    pg.draw.aalines(sc, LIGHT_BLUE,True,
                    [[0, 491], [0, 449], [21, 449], [21, 463], [25, 466], [25, 473], [35, 473], [35, 452], [42, 452],
                     [42, 415],
                     [78, 415], [78, 438], [99, 438], [99, 428], [105, 428], [105, 424],
                     [118, 424], [118, 432], [124, 432], [124, 426], [133, 426], [133, 367], [146, 367], [146, 346],
                     [170, 346], [170, 331], [197, 331], [197, 337], [222, 337], [222, 367], [232, 367], [232, 394],
                     [242, 398], [242, 426], [248, 426], [248, 418], [262, 418], [262, 321],
                     [271, 321], [271, 281], [300, 293], [300, 322], [312, 322], [312, 444], [349, 444], [349, 361],
                     [363, 361], [363, 339], [400, 339], [400, 363], [412, 363], [412, 399],
                     [429, 399], [429, 431], [449, 431], [449, 389], [462, 389], [462, 341], [471, 341], [471, 299],
                     [541, 299], [541, 415],
                     [560, 415], [560, 427], [570, 427], [570, 333], [583, 333], [583, 326], [627, 326], [627, 334],
                     [637, 334], [637, 401],
                     [643, 401], [643, 422], [647, 421], [647, 416], [660, 407], [665, 407], [665, 382], [671, 382],
                     [671, 373], [675, 373], [675, 359], [678, 359], [678, 343], [683, 343], [683, 359], [688, 359],
                     [688, 373],
                     [694, 373], [694, 382], [701, 382], [701, 418], [707, 418], [707, 395], [720, 395], [720, 353],
                     [738, 346],
                     [803, 346], [820, 353], [821, 400], [840, 400], [840, 429], [854, 429], [854, 302], [912, 302],
                     [912, 449],
                     [915, 449], [915, 444], [919, 444], [919, 418], [932, 418], [932, 361], [964, 390], [964, 365],
                     [972, 357],
                     [996, 357], [996, 365], [1008, 365], [1008, 378], [1012, 378], [1012, 394], [1017, 394],
                     [1017, 409],
                     [1022, 409], [1022, 422], [1030, 422], [1030, 429], [1035, 429], [1035, 414], [1059, 389],
                     [1059, 325],
                     [1117, 325], [1117, 334], [1128, 334], [1128, 413], [1143, 413], [1143, 419], [1160, 419],
                     [1160, 313], [1202, 368], [1247, 323],
                     [1247, 441], [1271, 441], [1271, 463], [1332, 463], [1332, 491]])
    pg.draw.line(sc, LIGHT_BLUE, [0, 491], [1332, 491], 3)
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 835], [1332, 835])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 806], [1332, 806])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 762], [1332, 762])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 783], [1332, 783])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 743], [1332, 743])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 728], [1332, 728])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 710], [1332, 710])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 697], [1332, 697])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 683], [1332, 683])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 671], [1332, 671])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 661], [1332, 661])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 651], [1332, 651])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 641], [1332, 641])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 633], [1332, 633])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 626], [1332, 626])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 618], [1332, 618])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 612], [1332, 612])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 605], [1332, 605])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 599], [1332, 599])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 593], [1332, 593])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 587], [1332, 587])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 582], [1332, 582])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 578], [1332, 578])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 573], [1332, 573])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 568], [1332, 568])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 563], [1332, 563])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 559], [1332, 559])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 554], [1332, 554])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 550], [1332, 550])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 546], [1332, 546])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 542], [1332, 542])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 538], [1332, 538])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 534], [1332, 534])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 531], [1332, 531])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 528], [1332, 528])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 525], [1332, 525])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 522], [1332, 522])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 519], [1332, 519])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 516], [1332, 516])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 514], [1332, 514])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 512], [1332, 512])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 510], [1332, 510])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 508], [1332, 508])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 506], [1332, 506])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 504], [1332, 504])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 502], [1332, 502])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 500], [1332, 500])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 498], [1332, 498])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 497], [1332, 497])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 496], [1332, 496])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 495], [1332, 495])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 494], [1332, 494])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 493], [1332, 493])
    pg.draw.aaline(sc, LIGHT_BLUE, [0, 492], [1332, 492])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [189, 850],
                   [624, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [407, 850],
                   [658, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [624, 850],
                   [702, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [841, 850],
                   [755, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [1055, 850],
                   [813, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [1270, 850],
                   [845, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [1332, 753],
                   [883, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [1332, 627],
                   [980, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [1332, 753],
                   [883, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [1332, 686],
                   [924, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [0, 830],
                   [576, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [0, 736],
                   [538, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [0, 672],
                   [491, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [0, 633],
                   [423, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [0, 602],
                   [380, 491])
    pg.draw.aaline(sc, LIGHT_BLUE,
                   [1332, 592],
                   [1040, 491])

    pg.draw.aaline(sc, ORANGE, [277, 761], [781, 761])
    pg.draw.polygon(sc, GRAY,
                    [[109, 710], [9, 670],
                     [25, 560], [291, 484], [540, 473], [713, 538], [1046, 597], [1077, 668], [1035, 720]])
    pg.draw.lines(sc, BLACK, True,
                    [[109, 710], [9, 670],
                     [25, 560], [291, 484], [540, 473], [713, 538], [1046, 597], [1077, 668], [1035, 720]],2)
    pg.draw.polygon(sc, ORANGE,
                    [[9, 670], [15, 633],
                     [1075, 664], [1077, 668], [1035, 720], [111, 713]])
    pg.draw.lines(sc, BLACK, True,
                    [[9, 670], [15, 633],
                     [1075, 664], [1077, 668], [1035, 720], [111, 713]],2)
    pg.draw.polygon(sc,     GRAY,
                    [[274, 710], [781, 710],
                     [781, 759], [274, 758]])
    pg.draw.polygon(sc, ORANGE,
                    [[83, 700], [138, 611],
                     [359, 607], [382, 480], [355, 481], [337, 580], [122, 585], [58, 690]])
    pg.draw.lines(sc, BLACK ,True,
                    [[83, 700], [138, 611],
                     [359, 607], [382, 480], [355, 481], [337, 580], [122, 585], [58, 690]],2)
    pg.draw.polygon(sc, GRAY,
                    [[18, 607], [8, 550],
                     [45, 459], [132, 530], [25, 560]])
    pg.draw.polygon(sc, (227, 253, 253),
                    [[425, 498], [543, 496],
                     [709, 572], [414, 569]])
    pg.draw.aalines(sc, (227, 253, 253),True,
                    [[425, 498], [543, 496],
                     [709, 572], [414, 569]])
    pg.draw.aalines(sc, BLACK, True,
                    [[425, 498], [543, 496],
                     [709, 572], [414, 569]])
    pg.draw.circle(sc, BLACK,
                   (201, 712), 89)
    pg.draw.circle(sc, WHITE,
                   (201, 712), 60)
    pg.draw.circle(sc, GRAY,
                   (201, 712), 45)
    pg.draw.circle(sc, BLACK,
                   (856, 714), 89)
    pg.draw.circle(sc, WHITE,
                   (856, 714), 60)
    pg.draw.circle(sc, GRAY,
                   (856, 714), 45)

    # обновляем окно
    pg.display.update()

    # Если круг полностью скрылся
    # за правой границей,
    if x <= 0 - r:
        # перемещаем его за левую
        x = WIN_WIDTH + r
    else:  # Если еще нет,
        # на следующей итерации цикла
        # круг отобразится немного правее
        x -= 2

    clock.tick(FPS)